"use strict";function _createForOfIteratorHelper(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,t=function(){};return{s:t,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return i=e.done,e},e:function(e){s=!0,o=e},f:function(){try{i||null==r.return||r.return()}finally{if(s)throw o}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}window.onbeforeunload=function(){window.scrollTo(0,0)};var slideUp=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=e.offsetHeight+"px",e.offsetHeight,e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,window.setTimeout(function(){e.style.display="none",e.style.removeProperty("height"),e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideDown=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.removeProperty("display");var r=window.getComputedStyle(e).display;e.style.display=r="none"===r?"block":r;r=e.offsetHeight;e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,e.offsetHeight,e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=r+"px",e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),window.setTimeout(function(){e.style.removeProperty("height"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideToggle=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;return("none"===window.getComputedStyle(e).display?slideDown:slideUp)(e,t)};window.onload=function(){$(".form").validate({errorClass:"invalid",errorPlacement:function(e,t){},rules:{user_name:{required:!0},user_email:{required:!0,email:!0},user_phone:{required:!0},user_datebirth:{required:!0},dentist_name:{required:!0},dentist_address:{required:!0},dentist_email:{required:!0,email:!0},dentist_phone:{required:!0},dentist_gdc:{required:!0}},submitHandler:function(){var e=$(".tooth__checkbox");if(0<e.length&&$(".tooth__checkbox:checked").length<1)return e.parents(".tooth__item").addClass("invalid"),e[0].focus(),!1;form.submit()}});var a=document.querySelector(".burger"),c=document.querySelector(".header"),d=document.querySelectorAll(".technology-card"),u=document.querySelector(".treatments"),p=document.querySelector(".treatments-sidebar"),f=document.querySelector(".treatments .dropdown__trigger"),m=document.querySelector(".treatments .dropdown__item"),v=document.querySelectorAll(".treatments-sidebar a");if(p){var e=function(e){e.preventDefault();e=this.getAttribute("href"),e=document.querySelector(e).offsetTop+200;scroll({top:e,behavior:"smooth"})},t=document.querySelectorAll(".treatments-content__item"),r=document.querySelector(".treatments-sidebar a").offsetHeight,n=document.querySelectorAll(".treatments-sidebar a");window.addEventListener("scroll",function(){t.forEach(function(e){e.offsetTop-150<=(document.documentElement.scrollTop||document.body.scrollTop)+r&&(n.forEach(function(e){e.parentElement.classList.remove("js-current"),e.parentElement.removeAttribute("class")}),e=e.getAttribute("id"),document.querySelector('a[href="#'.concat(e,'"]')).parentElement.classList.add("js-current"),f.firstChild.textContent=document.querySelector(".treatments-sidebar li.js-current a").textContent)})});var o,i=_createForOfIteratorHelper(linksScroll);try{for(i.s();!(o=i.n()).done;)o.value.addEventListener("click",e)}catch(e){i.e(e)}finally{i.f()}}window.addEventListener("scroll",function(){1<=$(window).scrollTop()?(c.classList.add("js-scroll-down"),c.classList.remove("js-scroll-top")):(c.classList.add("js-scroll-top"),c.classList.remove("js-scroll-down","js-nav-open","js-nav-close"))}),OverlayScrollbars(document.querySelectorAll(".tooth"),{});var s,l,y,h=document.querySelector(".files__table"),g=new DataTransfer;$("#file").on("change",function(e){for(var t=0;t<this.files.length;t++){var r=$("<div/>",{class:"files__wrapper"});$("<files-item/>",{class:"name",text:this.files.item(t).name});r.append('<div class="files-item"><i class="icon-file"></i><span class="files-item__name">'.concat(this.files.item(t).name,'</span><i class="files-item__remove icon-trash-can"></i><div><div>')),$(".files__table").append(r)}var n,o=_createForOfIteratorHelper(this.files);try{for(o.s();!(n=o.n()).done;){var i=n.value;g.items.add(i)}}catch(e){o.e(e)}finally{o.f()}this.files=g.files,0<=this.files.length?h.style.display="flex":h.style.display="none",$(".files-item__remove").click(function(){var e=$(this).parent().find(".files-item__name").text();$(this).parents(".files__wrapper").remove();for(var t=0;t<g.items.length;t++)e!==g.items[t].getAsFile().name||g.items.remove(t);document.getElementById("file").files=g.files})}),window.matchMedia("(min-width: 992px)").matches?(a.addEventListener("click",function(){c.classList.contains("js-nav-open")?(c.classList.remove("js-nav-open"),c.classList.add("js-nav-close")):(c.classList.add("js-nav-open"),c.classList.remove("js-nav-close"))}),$(".technology__wrapper").click(function(){$(".technology__wrapper").not($(this).closest(".technology__wrapper")).removeClass("js-active"),$(this).closest(".technology__wrapper").addClass("js-active"),$(this).hasClass("js-active")&&($(".technology-card__body").not($(this).find(".technology-card__body")).slideUp(300),$(this).find(".technology-card__body").slideDown(300))}),document.querySelector(".horizontal-scroll")&&(gsap.registerPlugin(ScrollTrigger),s=gsap.utils.toArray(".horizontal-scroll"),l=0,(y=function(){l=0,s.forEach(function(e){l+=e.offsetWidth})})(),ScrollTrigger.addEventListener("refreshInit",y),y=document.querySelector(".treatments"),gsap.to(s,{x:function(){return"-".concat(l-window.innerWidth)},ease:"none",scrollTrigger:{start:"-120px top",trigger:y,pin:!0,scrub:!0,end:function(){return"+=".concat(l)},invalidateOnRefresh:!0}}),s.forEach(function(e,t){ScrollTrigger.create({trigger:e,start:function(){return"top top-="+(e.offsetLeft-window.innerWidth/2)*(l/(l-window.innerWidth))},end:function(){return"+="+e.offsetWidth*(l/(l-window.innerWidth))},toggleClass:{targets:e,className:"active"}})}))):function(){for(var t,r=document.querySelectorAll(".show__trigger"),n=document.querySelectorAll(".show__item"),e=0;e<r.length;e++)!function(e){r[e].addEventListener("click",function(){r[e].classList.toggle("js-active"),r[e].classList.contains("js-active")?(r[e].textContent="See less",n.forEach(function(e){e.style.display="block"})):(r[e].textContent="See all",n.forEach(function(e){e.style.display="none"}))})}(e);if(p){var o,i=function(e){e.preventDefault();e=this.getAttribute("href"),e=document.querySelector(e).offsetTop-150;scroll({top:e,behavior:"smooth"})},s=_createForOfIteratorHelper(linksScroll);try{for(s.s();!(o=s.n()).done;)o.value.addEventListener("click",i)}catch(e){s.e(e)}finally{s.f()}}f&&m&&(t=m.offsetHeight,document.documentElement.style.setProperty("--treatments-dropdown-offset",t+"px"),window.addEventListener("scroll",function(){if(window.scrollY>t+64){if(p.classList.add("js-scroll-down"),u.classList.add("offset-top"),m.style.display="none",p.classList.contains("js-scroll-down"))for(var e=0;e<v.length;e++)!function(e){v[e].addEventListener("click",function(){v.forEach(function(e){e.parentElement.classList.remove("js-current"),e.parentElement.removeAttribute("class")}),v[e].parentElement.classList.add("js-current"),f.firstChild.textContent=v[e].textContent})}(e)}else p.classList.remove("js-scroll-down"),m.style.display="block",u.classList.remove("offset-top")}),p.addEventListener("click",function(){f.classList.toggle("js-active"),slideToggle(m,300)}),f.firstChild.textContent=document.querySelector(".treatments-sidebar li.js-current a").textContent),a.addEventListener("click",function(){c.classList.toggle("js-nav-open"),document.body.classList.toggle("js-lock")});for(var l=0;l<d.length;l++)!function(e){d[e].addEventListener("click",function(){d.forEach(function(e){e.classList.remove("js-active")}),d[e].classList.add("js-active")})}(l);new Swiper(".treatments-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".treatments-button-next",prevEl:".treatments-button-prev"},pagination:{el:".treatments-pagination"},breakpoints:{768:{slidesPerView:2}}})}();new Swiper(".practices-slider",{slidesPerView:1,spaceBetween:40,navigation:{nextEl:".practices-button-next",prevEl:".practices-button-prev"},pagination:{el:".practices-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".testimonials-slider",{slidesPerView:1,spaceBetween:30,loop:!0,navigation:{nextEl:".testimonials-button-next",prevEl:".testimonials-button-prev"},pagination:{el:".testimonials-pagination"},breakpoints:{768:{slidesPerView:2},992:{slidesPerView:"auto",centeredSlides:!0}}}),new Swiper(".cases-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".cases-button-next",prevEl:".cases-button-prev"},pagination:{el:".cases-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".socials__slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".socials-button-next",prevEl:".socials-button-prev"},pagination:{el:".socials-pagination"},breakpoints:{768:{slidesPerView:2},992:{slidesPerView:5}}})};var _step4,linksScroll=document.querySelectorAll(".scroll__link"),_iterator4=_createForOfIteratorHelper(linksScroll);try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var link=_step4.value;link.addEventListener("click",clickHandler)}}catch(e){_iterator4.e(e)}finally{_iterator4.f()}function clickHandler(e){e.preventDefault();e=this.getAttribute("href"),e=document.querySelector(e).offsetTop-150;scroll({top:e,behavior:"smooth"})}var textarea=document.querySelector("textarea");function autosizeTextarea(){var e=this;setTimeout(function(){e.style.cssText="height:auto; padding:0",e.style.cssText="-moz-box-sizing:content-box",e.style.cssText="height:"+e.scrollHeight+"px"},0)}textarea&&textarea.addEventListener("keydown",autosizeTextarea),$("select").each(function(){var t=$(this),e=$(this).children("option").length;t.addClass("select__hidden"),t.wrap('<div class="select"></div>'),t.after('<div class="select__styled"></div>');var r=t.next("div.select__styled");r.append('<span></span><i class="icon-arrow-dropdown"></i>'),r.find("span").text(t.children("option").eq(0).text());for(var n=$("<ul />",{class:"select__options"}).insertAfter(r),o=0;o<e;o++)$("<li />",{text:t.children("option").eq(o).text(),rel:t.children("option").eq(o).val()}).appendTo(n);var i=n.children("li");r.click(function(e){e.stopPropagation(),$("div.select__styled.active").not(this).each(function(){$(this).removeClass("active").next("ul.select__options").slideUp(300)}),$(this).toggleClass("active").next("ul.select__options").slideToggle(300)}),i.click(function(e){e.stopPropagation(),r.find("span").text($(this).text()).removeClass("active"),t.val($(this).attr("rel")),n.slideUp(300)}),$(document).click(function(){r.removeClass("active"),n.slideUp(300)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,