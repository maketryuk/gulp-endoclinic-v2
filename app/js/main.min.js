"use strict";function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var o=0,t=function(){};return{s:t,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,s=!0,i=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){i=!0,r=e},f:function(){try{s||null==n.return||n.return()}finally{if(i)throw r}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(n="Object"===n&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}var slideUp=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=e.offsetHeight+"px",e.offsetHeight,e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,window.setTimeout(function(){e.style.display="none",e.style.removeProperty("height"),e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideDown=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.removeProperty("display");var n=window.getComputedStyle(e).display;e.style.display=n="none"===n?"block":n;n=e.offsetHeight;e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,e.offsetHeight,e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=n+"px",e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),window.setTimeout(function(){e.style.removeProperty("height"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideToggle=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;return("none"===window.getComputedStyle(e).display?slideDown:slideUp)(e,t)};window.onload=function(){var e,s=document.querySelector(".burger"),i=document.querySelector(".header"),a=document.querySelectorAll(".technology-card"),t=(document.querySelectorAll(".technology-card__body"),document.querySelectorAll(".tabs__item")),n=document.querySelectorAll(".tabs__trigger"),o=document.querySelector(".treatments .dropdown__trigger .dropdown__trigger-text"),l=document.querySelector(".treatments .dropdown"),c=document.querySelector(".treatments .dropdown__list"),r=_createForOfIteratorHelper(document.querySelectorAll(".header-contacts__link"));try{for(r.s();!(e=r.n()).done;)e.value.addEventListener("click",d)}catch(e){r.e(e)}finally{r.f()}function d(e){e.preventDefault();e=this.getAttribute("href"),e=document.querySelector(e).offsetTop;scroll({top:e-100,behavior:"smooth"})}window.addEventListener("scroll",function(){1<=$(window).scrollTop()?(i.classList.add("js-scroll-down"),i.classList.remove("js-scroll-top")):(i.classList.add("js-scroll-top"),i.classList.remove("js-scroll-down","js-nav-open","js-nav-close"))});for(var p=0;p<n.length;p++)!function(e){n[e].addEventListener("click",function(){t.forEach(function(e){e.classList.remove("js-active")}),n.forEach(function(e){e.classList.remove("js-active")}),t[e].classList.add("js-active"),n[e].classList.add("js-active"),o.textContent=document.querySelector(".tabs__trigger.js-active").textContent})}(p);o&&(o.textContent=document.querySelector(".tabs__trigger.js-active").textContent),OverlayScrollbars(document.querySelectorAll(".tooth"),{});var u,y,f,v=document.querySelector(".files__table"),m=new DataTransfer;$("#file").on("change",function(e){for(var t=0;t<this.files.length;t++){var n=$("<div/>",{class:"files__wrapper"});$("<files-item/>",{class:"name",text:this.files.item(t).name});n.append('<div class="files-item"><i class="icon-file"></i><span class="files-item__name">'.concat(this.files.item(t).name,'</span><i class="files-item__remove icon-trash-can"></i><div><div>')),$(".files__table").append(n)}var o,r=_createForOfIteratorHelper(this.files);try{for(r.s();!(o=r.n()).done;){var s=o.value;m.items.add(s)}}catch(e){r.e(e)}finally{r.f()}this.files=m.files,0<=this.files.length?v.style.display="flex":v.style.display="none",$(".files-item__remove").click(function(){var e=$(this).parent().find(".files-item__name").text();$(this).parents(".files__wrapper").remove();for(var t=0;t<m.items.length;t++)e!==m.items[t].getAsFile().name||m.items.remove(t);document.getElementById("file").files=m.files})}),window.matchMedia("(min-width: 992px)").matches?(s.addEventListener("click",function(){i.classList.contains("js-nav-open")?(i.classList.remove("js-nav-open"),i.classList.add("js-nav-close")):(i.classList.add("js-nav-open"),i.classList.remove("js-nav-close"))}),$(".technology__wrapper").click(function(){$(".technology__wrapper").not($(this).closest(".technology__wrapper")).removeClass("js-active"),$(this).closest(".technology__wrapper").addClass("js-active"),$(this).hasClass("js-active")&&($(".technology-card__body").not($(this).find(".technology-card__body")).slideUp(300),$(this).find(".technology-card__body").slideDown(300))}),document.querySelector(".horizontal-scroll")&&(gsap.registerPlugin(ScrollTrigger),u=gsap.utils.toArray(".horizontal-scroll"),y=0,(f=function(){y=0,u.forEach(function(e){y+=e.offsetWidth})})(),ScrollTrigger.addEventListener("refreshInit",f),f=document.querySelector(".treatments"),gsap.to(u,{x:function(){return"-".concat(y-window.innerWidth)},ease:"none",scrollTrigger:{start:"-120px top",trigger:f,pin:!0,scrub:!0,end:function(){return"+=".concat(y)},invalidateOnRefresh:!0}}),u.forEach(function(e,t){ScrollTrigger.create({trigger:e,start:function(){return"top top-="+(e.offsetLeft-window.innerWidth/2)*(y/(y-window.innerWidth))},end:function(){return"+="+e.offsetWidth*(y/(y-window.innerWidth))},toggleClass:{targets:e,className:"active"}})}))):function(){for(var e,t=document.querySelectorAll(".show__trigger"),n=document.querySelectorAll(".show__item"),o=0;o<t.length;o++)!function(e){t[e].addEventListener("click",function(){t[e].classList.toggle("js-active"),t[e].classList.contains("js-active")?(t[e].textContent="See less",n.forEach(function(e){e.style.display="block"})):(t[e].textContent="See all",n.forEach(function(e){e.style.display="none"}))})}(o);l&&c&&(e=document.querySelector(".dropdown__list").offsetHeight,document.documentElement.style.setProperty("--treatments-dropdown-offset",e+"px"),window.addEventListener("scroll",function(){window.scrollY>e+64?(l.classList.add("js-scroll-down"),c.style.display="none",document.querySelector(".treatments").classList.add("offset-top")):(l.classList.remove("js-scroll-down"),c.style.display="block",document.querySelector(".treatments").classList.remove("offset-top"))}),l.addEventListener("click",function(){l.classList.contains("js-scroll-down")&&slideToggle(c,300)})),s.addEventListener("click",function(){i.classList.toggle("js-nav-open"),document.body.classList.toggle("js-lock")});for(var r=0;r<a.length;r++)!function(e){a[e].addEventListener("click",function(){a.forEach(function(e){e.classList.remove("js-active")}),a[e].classList.add("js-active")})}(r);new Swiper(".treatments-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".treatments-button-next",prevEl:".treatments-button-prev"},pagination:{el:".treatments-pagination"},breakpoints:{768:{slidesPerView:2}}})}();new Swiper(".practices-slider",{slidesPerView:1,spaceBetween:40,navigation:{nextEl:".practices-button-next",prevEl:".practices-button-prev"},pagination:{el:".practices-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".testimonials-slider",{slidesPerView:1,spaceBetween:30,loop:!0,navigation:{nextEl:".testimonials-button-next",prevEl:".testimonials-button-prev"},pagination:{el:".testimonials-pagination"},breakpoints:{768:{slidesPerView:2},992:{slidesPerView:"auto",centeredSlides:!0}}}),new Swiper(".cases-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".cases-button-next",prevEl:".cases-button-prev"},pagination:{el:".cases-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".socials__slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".socials-button-next",prevEl:".socials-button-prev"},pagination:{el:".socials-pagination"},breakpoints:{768:{slidesPerView:2},992:{slidesPerView:5}}})};var textarea=document.querySelector("textarea");function autosizeTextarea(){var e=this;setTimeout(function(){e.style.cssText="height:auto; padding:0",e.style.cssText="-moz-box-sizing:content-box",e.style.cssText="height:"+e.scrollHeight+"px"},0)}textarea&&textarea.addEventListener("keydown",autosizeTextarea),$("select").each(function(){var t=$(this),e=$(this).children("option").length;t.addClass("select__hidden"),t.wrap('<div class="select"></div>'),t.after('<div class="select__styled"></div>');var n=t.next("div.select__styled");n.append('<span></span><i class="icon-arrow-dropdown"></i>'),n.find("span").text(t.children("option").eq(0).text());for(var o=$("<ul />",{class:"select__options"}).insertAfter(n),r=0;r<e;r++)$("<li />",{text:t.children("option").eq(r).text(),rel:t.children("option").eq(r).val()}).appendTo(o);var s=o.children("li");n.click(function(e){e.stopPropagation(),$("div.select__styled.active").not(this).each(function(){$(this).removeClass("active").next("ul.select__options").slideUp(300)}),$(this).toggleClass("active").next("ul.select__options").slideToggle(300)}),s.click(function(e){e.stopPropagation(),n.find("span").text($(this).text()).removeClass("active"),t.val($(this).attr("rel")),o.slideUp(300)}),$(document).click(function(){n.removeClass("active"),o.slideUp(300)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,