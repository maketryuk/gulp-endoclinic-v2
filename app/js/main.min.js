"use strict";function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,t=function(){};return{s:t,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){s=!0,o=e},f:function(){try{i||null==n.return||n.return()}finally{if(s)throw o}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(n="Object"===n&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var slideUp=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=e.offsetHeight+"px",e.offsetHeight,e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,window.setTimeout(function(){e.style.display="none",e.style.removeProperty("height"),e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideDown=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.removeProperty("display");var n=window.getComputedStyle(e).display;e.style.display=n="none"===n?"block":n;n=e.offsetHeight;e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,e.offsetHeight,e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=n+"px",e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),window.setTimeout(function(){e.style.removeProperty("height"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideToggle=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;return("none"===window.getComputedStyle(e).display?slideDown:slideUp)(e,t)};window.onload=function(){$(".form").validate({errorClass:"invalid",errorPlacement:function(e,t){},rules:{user_name:{required:!0},user_email:{required:!0,email:!0},user_phone:{required:!0},user_datebirth:{required:!0},dentist_name:{required:!0},dentist_address:{required:!0},dentist_email:{required:!0,email:!0},dentist_phone:{required:!0},dentist_gdc:{required:!0}},submitHandler:function(){form.submit()}});var e,t,n,i=document.querySelector(".burger"),s=document.querySelector(".header"),a=document.querySelectorAll(".technology-card"),l=document.querySelector(".treatments"),c=document.querySelector(".treatments-sidebar"),d=document.querySelector(".treatments .dropdown__trigger"),p=document.querySelector(".treatments .dropdown__item"),u=document.querySelectorAll(".treatments-sidebar a");c&&(e=document.querySelectorAll(".treatments-content__item"),t=document.querySelector(".treatments-sidebar a").offsetHeight,n=document.querySelectorAll(".treatments-sidebar a"),window.addEventListener("scroll",function(){e.forEach(function(e){e.offsetTop-150<=(document.documentElement.scrollTop||document.body.scrollTop)+t&&(n.forEach(function(e){e.parentElement.classList.remove("js-current"),e.parentElement.removeAttribute("class")}),e=e.getAttribute("id"),document.querySelector('a[href="#'.concat(e,'"]')).parentElement.classList.add("js-current"),d.firstChild.textContent=document.querySelector(".treatments-sidebar li.js-current a").textContent)})}));var r,o=_createForOfIteratorHelper(document.querySelectorAll(".scroll__link"));try{for(o.s();!(r=o.n()).done;)r.value.addEventListener("click",m)}catch(e){o.e(e)}finally{o.f()}function m(e){e.preventDefault();e=this.getAttribute("href"),e=document.querySelector(e).offsetTop;scroll({top:e-150,behavior:"smooth"})}window.addEventListener("scroll",function(){1<=$(window).scrollTop()?(s.classList.add("js-scroll-down"),s.classList.remove("js-scroll-top")):(s.classList.add("js-scroll-top"),s.classList.remove("js-scroll-down","js-nav-open","js-nav-close"))}),OverlayScrollbars(document.querySelectorAll(".tooth"),{});var f,y,v,g=document.querySelector(".files__table"),h=new DataTransfer;$("#file").on("change",function(e){for(var t=0;t<this.files.length;t++){var n=$("<div/>",{class:"files__wrapper"});$("<files-item/>",{class:"name",text:this.files.item(t).name});n.append('<div class="files-item"><i class="icon-file"></i><span class="files-item__name">'.concat(this.files.item(t).name,'</span><i class="files-item__remove icon-trash-can"></i><div><div>')),$(".files__table").append(n)}var r,o=_createForOfIteratorHelper(this.files);try{for(o.s();!(r=o.n()).done;){var i=r.value;h.items.add(i)}}catch(e){o.e(e)}finally{o.f()}this.files=h.files,0<=this.files.length?g.style.display="flex":g.style.display="none",$(".files-item__remove").click(function(){var e=$(this).parent().find(".files-item__name").text();$(this).parents(".files__wrapper").remove();for(var t=0;t<h.items.length;t++)e!==h.items[t].getAsFile().name||h.items.remove(t);document.getElementById("file").files=h.files})}),window.matchMedia("(min-width: 992px)").matches?(i.addEventListener("click",function(){s.classList.contains("js-nav-open")?(s.classList.remove("js-nav-open"),s.classList.add("js-nav-close")):(s.classList.add("js-nav-open"),s.classList.remove("js-nav-close"))}),$(".technology__wrapper").click(function(){$(".technology__wrapper").not($(this).closest(".technology__wrapper")).removeClass("js-active"),$(this).closest(".technology__wrapper").addClass("js-active"),$(this).hasClass("js-active")&&($(".technology-card__body").not($(this).find(".technology-card__body")).slideUp(300),$(this).find(".technology-card__body").slideDown(300))}),document.querySelector(".horizontal-scroll")&&(gsap.registerPlugin(ScrollTrigger),f=gsap.utils.toArray(".horizontal-scroll"),y=0,(v=function(){y=0,f.forEach(function(e){y+=e.offsetWidth})})(),ScrollTrigger.addEventListener("refreshInit",v),v=document.querySelector(".treatments"),gsap.to(f,{x:function(){return"-".concat(y-window.innerWidth)},ease:"none",scrollTrigger:{start:"-120px top",trigger:v,pin:!0,scrub:!0,end:function(){return"+=".concat(y)},invalidateOnRefresh:!0}}),f.forEach(function(e,t){ScrollTrigger.create({trigger:e,start:function(){return"top top-="+(e.offsetLeft-window.innerWidth/2)*(y/(y-window.innerWidth))},end:function(){return"+="+e.offsetWidth*(y/(y-window.innerWidth))},toggleClass:{targets:e,className:"active"}})}))):function(){for(var t,n=document.querySelectorAll(".show__trigger"),r=document.querySelectorAll(".show__item"),e=0;e<n.length;e++)!function(e){n[e].addEventListener("click",function(){n[e].classList.toggle("js-active"),n[e].classList.contains("js-active")?(n[e].textContent="See less",r.forEach(function(e){e.style.display="block"})):(n[e].textContent="See all",r.forEach(function(e){e.style.display="none"}))})}(e);d&&p&&(t=p.offsetHeight,document.documentElement.style.setProperty("--treatments-dropdown-offset",t+"px"),window.addEventListener("scroll",function(){if(window.scrollY>t+64){if(c.classList.add("js-scroll-down"),l.classList.add("offset-top"),p.style.display="none",c.classList.contains("js-scroll-down"))for(var e=0;e<u.length;e++)!function(e){u[e].addEventListener("click",function(){u.forEach(function(e){e.parentElement.classList.remove("js-current"),e.parentElement.removeAttribute("class")}),u[e].parentElement.classList.add("js-current"),d.firstChild.textContent=u[e].textContent})}(e)}else c.classList.remove("js-scroll-down"),p.style.display="block",l.classList.remove("offset-top")}),c.addEventListener("click",function(){d.classList.toggle("js-active"),slideToggle(p,300)}),d.firstChild.textContent=document.querySelector(".treatments-sidebar li.js-current a").textContent),i.addEventListener("click",function(){s.classList.toggle("js-nav-open"),document.body.classList.toggle("js-lock")});for(var o=0;o<a.length;o++)!function(e){a[e].addEventListener("click",function(){a.forEach(function(e){e.classList.remove("js-active")}),a[e].classList.add("js-active")})}(o);new Swiper(".treatments-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".treatments-button-next",prevEl:".treatments-button-prev"},pagination:{el:".treatments-pagination"},breakpoints:{768:{slidesPerView:2}}})}();new Swiper(".practices-slider",{slidesPerView:1,spaceBetween:40,navigation:{nextEl:".practices-button-next",prevEl:".practices-button-prev"},pagination:{el:".practices-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".testimonials-slider",{slidesPerView:1,spaceBetween:30,loop:!0,navigation:{nextEl:".testimonials-button-next",prevEl:".testimonials-button-prev"},pagination:{el:".testimonials-pagination"},breakpoints:{768:{slidesPerView:2},992:{slidesPerView:"auto",centeredSlides:!0}}}),new Swiper(".cases-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".cases-button-next",prevEl:".cases-button-prev"},pagination:{el:".cases-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".socials__slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".socials-button-next",prevEl:".socials-button-prev"},pagination:{el:".socials-pagination"},breakpoints:{768:{slidesPerView:2},992:{slidesPerView:5}}})};var textarea=document.querySelector("textarea");function autosizeTextarea(){var e=this;setTimeout(function(){e.style.cssText="height:auto; padding:0",e.style.cssText="-moz-box-sizing:content-box",e.style.cssText="height:"+e.scrollHeight+"px"},0)}textarea&&textarea.addEventListener("keydown",autosizeTextarea),$("select").each(function(){var t=$(this),e=$(this).children("option").length;t.addClass("select__hidden"),t.wrap('<div class="select"></div>'),t.after('<div class="select__styled"></div>');var n=t.next("div.select__styled");n.append('<span></span><i class="icon-arrow-dropdown"></i>'),n.find("span").text(t.children("option").eq(0).text());for(var r=$("<ul />",{class:"select__options"}).insertAfter(n),o=0;o<e;o++)$("<li />",{text:t.children("option").eq(o).text(),rel:t.children("option").eq(o).val()}).appendTo(r);var i=r.children("li");n.click(function(e){e.stopPropagation(),$("div.select__styled.active").not(this).each(function(){$(this).removeClass("active").next("ul.select__options").slideUp(300)}),$(this).toggleClass("active").next("ul.select__options").slideToggle(300)}),i.click(function(e){e.stopPropagation(),n.find("span").text($(this).text()).removeClass("active"),t.val($(this).attr("rel")),r.slideUp(300)}),$(document).click(function(){n.removeClass("active"),r.slideUp(300)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,